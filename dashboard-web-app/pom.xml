<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.inventory.hub</groupId>
    <artifactId>inventory-hub</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>Inventory Hub</name>
    <description>Inventory Hub - Real-time Inventory System Dashboard</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.1.RELEASE</version>
        <!--
        <version>1.5.8.RELEASE</version>
        -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.build.timestamp.format>yyMMddHHmmssSSS</maven.build.timestamp.format>

        <!-- dependency versions -->
        <java.version>1.8</java.version>
        <plugin.fmp.version>3.5.30</plugin.fmp.version>
        <plugin.spotify.version>0.4.11</plugin.spotify.version>
        <plugin.azure.webapp.version>0.1.3</plugin.azure.webapp.version>

        <!-- configurable properties -->
        <docker.image.prefix>put-your-docker-registry-url</docker.image.prefix>
        <azure.app.name>${WEBAPP_NAME}</azure.app.name>
        <azure.app.resourceGroupName>${WEBAPP_RESOURCEGROUP_NAME}</azure.app.resourceGroupName>
        <azure.app.region>${WEBAPP_REGION}</azure.app.region>

        <!-- where to start running the app -->
        <start-class>org.inventory.hub.InventoryHub</start-class>

        <!-- Spring Cloud Stream -->
        <spring-cloud.version>Finchley.BUILD-SNAPSHOT</spring-cloud.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.microsoft.azure</groupId>
                <artifactId>azure-spring-boot-bom</artifactId>
                <version>2.0.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

        </dependencies>
    </dependencyManagement>

    <repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
        <repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>azure-documentdb-spring-boot-starter</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
	  		<groupId>com.microsoft.azure</groupId>
	  		<artifactId>azure-eventhubs</artifactId>
	  		<version>1.0.0</version>
	 	</dependency>
	 	<dependency>
	  		<groupId>com.microsoft.azure</groupId>
	  		<artifactId>azure-eventhubs-eph</artifactId>
	  		<version>1.0.0</version>
	 	</dependency>

        <!-- use embedded servlet container -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.13</version>
	    </dependency>

        <!-- use web socket -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>sockjs-client</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>stomp-websocket</artifactId>
            <version>2.3.3</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>3.3.7</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>3.1.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
        </dependency>

        <!-- Spring Cloud Stream -->

        <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
		</dependency>

        <dependency>
		  <groupId>org.springframework.cloud</groupId>
		  <artifactId>spring-cloud-stream-binder-kafka</artifactId>
		</dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-test-support</artifactId>
			<scope>test</scope>
		</dependency>

    </dependencies>

    <build>
        <plugins>

            <!--*************************************************-->
            <!-- Deploy to tomcat on localhost                   -->
            <!--*************************************************-->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.6.7</version>
                <configuration>
                    <container>
                        <containerId>tomcat8x</containerId>
                        <type>installed</type>
                        <home>${TOMCAT_HOME}</home>
                    </container>
                    <configuration>
                        <type>existing</type>
                        <home>${TOMCAT_HOME}</home>
                    </configuration>
                    <!-- Deployables configuration -->
                    <deployables>
                        <deployable>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <type>war</type>
                            <properties>
                                <context>ROOT</context>
                            </properties>
                        </deployable>
                    </deployables>
                </configuration>
            </plugin>

            <!--*************************************************-->
            <!-- Deploy to Tomcat on Azure App Service           -->
            <!--*************************************************-->
            <plugin>
                <groupId>com.microsoft.azure</groupId>
                <artifactId>azure-webapp-maven-plugin</artifactId>
                <version>1.5.4</version>
                <configuration>

                    <!-- Web App information -->
                    <resourceGroup>${azure.app.resourceGroupName}</resourceGroup>
                    <appName>${azure.app.name}</appName>
                    <region>${azure.app.region}</region>

                    <!-- Java Runtime Stack for Web App on Linux-->
                    <linuxRuntime>tomcat 8.5-jre8</linuxRuntime>

                    <appSettings>

                        <!-- Inventory Cosmos DB -->

                        <property>
                            <name>COSMOSDB_URI</name>
                            <value>${COSMOSDB_URI}</value>
                        </property>
                        <property>
                            <name>COSMOSDB_KEY</name>
                            <value>${COSMOSDB_KEY}</value>
                        </property>
                        <property>
                            <name>COSMOSDB_DBNAME</name>
                            <value>${COSMOSDB_DBNAME}</value>
                        </property>

                        <!-- Notifications Event Hub -->

                        <property>
                            <name>NOTIFICATIONS_EVENT_HUB_NAME</name>
                            <value>${NOTIFICATIONS_EVENT_HUB_NAME}</value>
                        </property>
                        <property>
                            <name>NOTIFICATIONS_EVENT_HUB_CONSUMER_GROUP_NAME</name>
                            <value>${NOTIFICATIONS_EVENT_HUB_CONSUMER_GROUP_NAME}</value>
                        </property>
                        <property>
                            <name>NOTIFICATIONS_EVENT_HUB_CONNECTION_STRING</name>
                            <value>${NOTIFICATIONS_EVENT_HUB_CONNECTION_STRING}</value>
                        </property>
                        <property>
                            <name>NOTIFICATIONS_EVENT_HUB_NAMESPACE_CONNECTION_STRING</name>
                            <value>${NOTIFICATIONS_EVENT_HUB_NAMESPACE_CONNECTION_STRING}</value>
                        </property>
                        <property>
                            <name>NOTIFICATIONS_STORAGE_CONTAINER_NAME</name>
                            <value>${NOTIFICATIONS_STORAGE_CONTAINER_NAME}</value>
                        </property>
                        <property>
                            <name>NOTIFICATIONS_STORAGE_CONNECTION_STRING</name>
                            <value>${NOTIFICATIONS_STORAGE_CONNECTION_STRING}</value>
                        </property>
                        <property>
                            <name>NOTIFICATIONS_EVENT_HUB_FQDN</name>
                            <value>${NOTIFICATIONS_EVENT_HUB_FQDN}</value>
                        </property>
                        <property>
                            <name>NOTIFICATION_ERRORS_EVENT_HUB_NAME</name>
                            <value>${NOTIFICATION_ERRORS_EVENT_HUB_NAME}</value>
                        </property>

                        <property>
                            <name>JAVA_OPTS</name>
                            <value>-Xms2048m -Xmx2048m</value>
                        </property>

                    </appSettings>

                </configuration>
            </plugin>


            <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>${project.basedir}/checkstyle.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <failOnViolation>true</failOnViolation>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <resourceIncludes>**/*</resourceIncludes>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <linkXRef>false</linkXRef>
                </configuration>
                <inherited>true</inherited>
            </plugin>

            -->

        </plugins>

    </build>
</project>
